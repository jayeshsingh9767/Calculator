
package calculator;


public class Calc extends javax.swing.JFrame {

    double n1,n2,res,ans;
    String temp,opp="",resStr;
    int count=0,click=0,equ=0;
    int oprat=0;
    public Calc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        scr = new javax.swing.JTextField();
        b6 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        clr = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        sqrt = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        sqrt2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scr.setText("0");

        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b1.setText("1");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b2.setText("2");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        minus.setText("--");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        multiply.setText("*");
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        clr.setText("clr");
        clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrActionPerformed(evt);
            }
        });

        b0.setText("0");
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        sqrt.setText("Sqrt");
        sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtActionPerformed(evt);
            }
        });

        divide.setText("/");
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        dot.setText(".");
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        sqrt2.setText("Binary");
        sqrt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrt2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scr)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(equal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(minus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(multiply, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(divide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sqrt)
                            .addComponent(clr, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sqrt2))))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(scr, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clr, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dot, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(sqrt2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    
    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        
        if(evt.getSource()==b4 && count==0){
            //n1=4;
            scr.setText("4");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"4";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b4 && count==0){
            //n1=4;
            scr.setText("4");
            count++;
            String countStr=String.valueOf(count);
            
            }
            else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"4";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
        
        
        
    }//GEN-LAST:event_b4ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        if(evt.getSource()==b3 && count==0){
            //n1=3;
            scr.setText("3");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"3";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b3 && count==0){
            //n1=3;
            scr.setText("3");
            count++;
            String countStr=String.valueOf(count);
            
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"3";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
    }//GEN-LAST:event_b3ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        if(evt.getSource()==b1 && count==0){
            //n1=1;
            scr.setText("1");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"1";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b1 && count==0){
            //n1=1;
            scr.setText("1");
            count++;
            String countStr=String.valueOf(count);
            
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"1";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
    }//GEN-LAST:event_b1ActionPerformed

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed
        
        if(evt.getSource()==b0 && count==0){
            //n1=0;
            scr.setText("0");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
        }    
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"0";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b0 && count==0){
            //n1=0;
            scr.setText("0");
            count++;
            String countStr=String.valueOf(count);
            
        }    
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"0";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
    }//GEN-LAST:event_b0ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        if(evt.getSource()==b5 && count==0){
            //n1=5;
            scr.setText("5");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
            }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"5";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b5 && count==0){
            //n1=5;
            scr.setText("5");
            count++;
            String countStr=String.valueOf(count);
            
            }
            else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"5";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
    }//GEN-LAST:event_b5ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        if(evt.getSource()==b2 && count==0){
            //n1=2;
            scr.setText("2");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"2";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            if(evt.getSource()==b2 && count==0){
                //n1=2;
                scr.setText("2");
                count++;
                String countStr=String.valueOf(count);
                
            }
                else if(count>0){
                temp=scr.getText();
                //System.out.println(temp);
                temp=temp+"2";
                scr.setText(temp);
                String countStr=String.valueOf(count);
                
            }
        }
    }//GEN-LAST:event_b2ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        if(evt.getSource()==b6 && count==0){
            //n1=6;
            scr.setText("6");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
            }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"6";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b6 && count==0){
            //n1=6;
            scr.setText("6");
            count++;
            String countStr=String.valueOf(count);
            
            }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"6";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        if(evt.getSource()==b7 && count==0){
            //n1=7;
            scr.setText("7");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
            }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"7";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b7 && count==0){
            //n1=7;
            scr.setText("7");
            count++;
            String countStr=String.valueOf(count);
            
            }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"7";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        if(evt.getSource()==b8 && count==0){
            //n1=8;
            scr.setText("8");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
            }
            else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"8";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
            else if(oprat>0){
            count=0;
            if(evt.getSource()==b8 && count==0){
            //n1=8;
            scr.setText("8");
            count++;
            String countStr=String.valueOf(count);
            
            }
            else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"8";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
            }
        }
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        if(evt.getSource()==b9 && count==0){
            //n1=9;
            scr.setText("9");
            count++;
            String countStr=String.valueOf(count);
            
            equ=0;
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"9";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        else if(oprat>0){
            count=0;
            if(evt.getSource()==b9 && count==0){
            //n1=9;
            scr.setText("9");
            count++;
            String countStr=String.valueOf(count);
            
        }
        else if(count>0){
            temp=scr.getText();
            //System.out.println(temp);
            temp=temp+"9";
            scr.setText(temp);
            String countStr=String.valueOf(count);
            
        }
        }
    }//GEN-LAST:event_b9ActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        
        if(evt.getSource()==plus && count>0){                   
            opp="plus";
            String s=scr.getText();
            scr.setText("+");
            n1=Double.parseDouble(s);
            count=0;
            oprat++;
        }
        else if(evt.getSource()==plus && equ>0){
            opp="plus";
            String s=scr.getText();
            scr.setText("+");
            ans=Double.parseDouble(s);
            n1=ans;
        }
    }//GEN-LAST:event_plusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        if(evt.getSource()==minus && count>0){  
            opp="minus";
            String s=scr.getText();
            scr.setText("-");
            n1=Double.parseDouble(s);
            count=0;
            oprat++;    
        }      
        else if(evt.getSource()==minus && equ>0){
            opp="minus";
            String s=scr.getText();
            scr.setText("-");
            ans=Double.parseDouble(s);
            n1=ans;
        }
        
    }//GEN-LAST:event_minusActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        if(evt.getSource()==multiply && count>0){
            opp="mul";
            String s=scr.getText();
            scr.setText("*");
            n1=Double.parseDouble(s);
            count=0;
            oprat++;
        }   
        else if(evt.getSource()==multiply && equ>0){
            opp="mul";
            String s=scr.getText();
            scr.setText("*");
            ans=Double.parseDouble(s);
            n1=ans;
        }
    }//GEN-LAST:event_multiplyActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
        if(evt.getSource()==divide && count>0){
            opp="div";
            String s=scr.getText();
            scr.setText("/");
            n1=Double.parseDouble(s);
            count=0;
            oprat++;
        }   
        else if(evt.getSource()==divide && equ>0){
            opp="div";
            String s=scr.getText();
            scr.setText("/");
            ans=Double.parseDouble(s);
            n1=ans;
        }
    }//GEN-LAST:event_divideActionPerformed

    private void clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrActionPerformed
        if(evt.getSource()==clr){
            scr.setText("");
            n1=0;
            n2=0;
            oprat=0;
            opp="";
            count=0;
            oprat=0;
            res=0;
            click=0;
            ans=0;
            res=0;
            scr.setText("0");
        }
    }//GEN-LAST:event_clrActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        
        if(evt.getSource()==equal &&opp.equals("plus")){
            String s=scr.getText();
            n2=Double.parseDouble(s);
            res=n1+n2;
            resStr=Double.toString(res);
            scr.setText(resStr);
            count=0;
            equ++;
            click=0;
        }
        else if(evt.getSource()==equal &&opp.equals("minus")){
            String s=scr.getText();
            n2=Double.parseDouble(s);
            res=n1-n2;
            resStr=Double.toString(res);
            scr.setText(resStr);
            count=0;
            click=0;
            equ++;
        }
        else if(evt.getSource()==equal && opp.equals("mul")){
            String s=scr.getText();
            n2=Double.parseDouble(s);
            res=n1*n2;
            resStr=Double.toString(res);
            scr.setText(resStr);
            count=0;
            equ++;
        }
        else if(evt.getSource()==equal && opp.equals("div")){
            String s=scr.getText();
            n2=Double.parseDouble(s);
            res=n1/n2;
            resStr=Double.toString(res);
            scr.setText(resStr);
            count=0;
            click=0;
            equ++;
        }
        
        
    }//GEN-LAST:event_equalActionPerformed

    private void sqrt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrt2ActionPerformed
        int number;
        String a="",temp="";
        String s=scr.getText();
        number=Integer.parseInt(s);
        int binary[] = new int[25];
        int index = 0;
        while(number > 0){
            binary[index++] = number%2;
            number = number/2;
        }
        for(int i = index-1;i >= 0;i--){
            a=Integer.toString(binary[i]);
            temp=temp+a;
        }
//        s=Integer.toString(a);
        scr.setText(temp);
        count=0;
        
        
    }//GEN-LAST:event_sqrt2ActionPerformed

    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtActionPerformed
        if(evt.getSource()==sqrt){
            double sqr;
            String s=scr.getText();
            sqr=Double.parseDouble(s);
            sqr=Math.sqrt(sqr);
            s=Double.toString(sqr);
            scr.setText(s);
            count=0;
        }
    }//GEN-LAST:event_sqrtActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
        if(evt.getSource()==dot && count>0){
            String s=scr.getText();
            scr.setText(s+".");
            
        }
    }//GEN-LAST:event_dotActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calc().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clr;
    private javax.swing.JButton divide;
    private javax.swing.JButton dot;
    private javax.swing.JButton equal;
    private javax.swing.JButton minus;
    private javax.swing.JButton multiply;
    private javax.swing.JButton plus;
    private javax.swing.JTextField scr;
    private javax.swing.JButton sqrt;
    private javax.swing.JButton sqrt2;
    // End of variables declaration//GEN-END:variables

    
}
